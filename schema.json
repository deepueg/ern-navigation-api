{
  "swagger": "2.0",
  "info": {
    "description": "Navigation helper",
    "title": "Electrode Native generic navigation api (V2.0)"
  },
  "produces": [
    "application/json"
  ],
  "paths": {
    "/navigate": {
      "post": {
        "tags": [
          "EnNavigation"
        ],
        "operationId": "navigate",
        "parameters": [
          {
            "name": "route",
            "in": "body",
            "description": "Route object that details where to navigate next",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ErnRoute"
            }
          }
        ]
      }
    },
    "/update": {
      "post": {
        "tags": [
          "EnNavigation"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "updatedRoute",
            "in": "body",
            "description": "Updated route object. This API expectes that the path of the update call is unchanged from the last navigate call. It is likely that the native implementation will reject your update call if the path is different from the last navigate call.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ErnRoute"
            }
          }
        ]
      }
    },
    "/finish": {
      "post": {
        "tags": [
          "EnNavigation"
        ],
        "operationId": "finish",
        "parameters": [
          {
            "name": "finalPayload",
            "in": "body",
            "description": "Optional json string payload to pass when a flow is completed. Use this to pass in any info needed by the RN view host on the native side",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/back": {
      "post": {
        "tags": [
          "EnNavigation"
        ],
        "operationId": "back",
        "parameters": [
          {
            "name": "route",
            "in": "body",
            "description": "Route object that details where to navigate next. Use this when you want to go back to a previous screen, it could be any previous screen in a given flow. If the given route is not found on the stack, native layer may push a new screen on top.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ErnRoute"
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "ErnRoute": {
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of the Route. Mostly the name of the container(defined by the native app) or the miniapp name. The content of the path is mainly determined by the native implemenation of the API"
        },
        "jsonPayload": {
          "type": "string",
          "description": "Optional Payload (respresented as JSON String) needed by the screen you are trying to navigate to."
        },
        "navigationBar": {
          "$ref": "#/definitions/NavigationBar"
        }
      },
      "required": [
        "path"
      ]
    },
    "NavigationBarButton": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of button"
        },
        "identifier": {
          "type": "string",
          "description": "Id of the button"
        },
        "orientation": {
          "type": "string",
          "description": "Orientation LEFT|RIGHT|CENTER etc."
        }
      },
      "required": [
        "name",
        "identifier",
        "orientation"
      ]
    },
    "NavigationBar": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of Nav Bar"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NavigationBarButton"
          },
          "description": "Right button properties"
        }
      },
      "required": [
        "title"
      ]
    }
  },
  "ern": {
    "moduleName": "Counseling",
    "moduleType": "ern-miniapp",
    "version": "0.28.2"
  }
}